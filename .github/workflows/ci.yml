name: CI Pipeline

on:
  push:
    branches: [ dev, staging, main ]
  pull_request:
    branches: [ dev, staging, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test_password
          MYSQL_DATABASE: php_lms_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mysqli, mbstring, gd, pdo_mysql
        coverage: xdebug

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Create environment file
      run: |
        cp .env.example .env.testing || echo "No .env.example found, creating basic .env.testing"
        cat > .env.testing << EOF
        APP_ENV=testing
        APP_DEBUG=true
        DB_HOST=127.0.0.1
        DB_PORT=3306
        DB_NAME=php_lms_test
        DB_USER=root
        DB_PASS=test_password
        EOF

    - name: Setup database
      run: |
        mysql -h 127.0.0.1 -u root -ptest_password php_lms_test < database/schema.sql

    - name: Run PHP Lint
      run: find . -name "*.php" -not -path "./vendor/*" -exec php -l {} \;

    - name: Run Code Style Check
      run: |
        if [ -f "vendor/bin/phpcs" ]; then
          vendor/bin/phpcs --standard=PSR12 --ignore=vendor src/
        else
          echo "PHP_CodeSniffer not installed, skipping style check"
        fi

    - name: Run Tests
      run: |
        if [ -f "vendor/bin/phpunit" ]; then
          vendor/bin/phpunit --coverage-text
        else
          echo "PHPUnit not installed, skipping tests"
        fi